
  function getLength(jumpings: number[]): number {  
    return jumpings.reduce((jumpDistanceSoFar, currentJump) => jumpDistanceSoFar + currentJump);
  }
  
  // Test Test 游땕 
  const jumps = [5, 6, 7]; 
  const totalLength = getLength(jumps);  
  console.log(totalLength);  
  
  /*
    2. I detta exempel har vi fokuserat p친 if-statements. Se om du kan g칬ra exemplet b칛ttre!
    */
  
  class Student {
    constructor(
      public name: string,
      public handedInOnTime: boolean,
      public passed: boolean = false
    ) {}
  }
  
  function getStudentStatus(student: Student): string {
    student.passed = student.name === "Sebastian" && student.handedInOnTime;
  
    return student.passed ? "VG" : "IG";
  }

  // Test Test 游땕 
  const student1 = new Student("Sebastian", true);
  const status = getStudentStatus(student1);
  console.log(status); 

  /*
    3. Variabelnamn 칛r viktiga. Kika igenom f칬ljande kod och g칬r om och r칛tt.
    Det finns flera code smells att identifiera h칛r. Vissa 칛r lurigare 칛n andra.
    */
  
  class TemperatureRecord {
    constructor(
      public location: string,
      public date: Date, 
      public temperature: number
    ) {}
  }

  function averageWeeklyTemperature(records: TemperatureRecord[]): number {
    const oneWeekAgo = new Date(Date.now() - 7 * 24 * 60 * 60 * 1000); // 7days * 24hours * 60minutes * 60seconds * 1000milliseconds
  
    let totalTemperature = 0;
    let count = 0;
  
    for (let i = 0; i < records.length; i++) {
      const record = records[i];
  
      if (record.location === "Stockholm" && record.date.getTime() > oneWeekAgo.getTime()) {
        totalTemperature += record.temperature;
        count++;
      }
    }

    return count > 0 ? totalTemperature / count : 0; // 游땕
  }

  // Test Test 游땕
  const records = [
    new TemperatureRecord("Stockholm", new Date(Date.now() - 3 * 24 * 60 * 60 * 1000), 20),
    new TemperatureRecord("Stockholm", new Date(Date.now() - 5 * 24 * 60 * 60 * 1000), 18),
    new TemperatureRecord("Gothenburg", new Date(Date.now() - 2 * 24 * 60 * 60 * 1000), 15)
  ];
  
  console.log(averageWeeklyTemperature(records)); 

  /*
    4. F칬ljande funktion kommer att presentera ett objekt i dom:en. 
    Se om du kan g칬ra det b칛ttre. Inte bara presentationen r칛knas, 칛ven strukturer.
    */
    class Product {
      constructor(
        public name: string,
        public price: number,
        public amount: number,
        public description: string,
        public image: string
      ) {}
    
      showProduct(): HTMLElement {
        const container = document.createElement("div");
      
        const title = document.createElement("h4");
        title.innerHTML = this.name;
      
        const imageTag = document.createElement("img");
        imageTag.src = this.image;
      
        const priceTag = document.createElement("strong");
        priceTag.innerHTML = `Price: $${this.price}`;
      
        const descriptionTag = document.createElement("p");
        descriptionTag.innerHTML = this.description;
      
        const amountTag = document.createElement("p");
        amountTag.innerHTML = `Amount ${this.amount}`;
      
        container.appendChild(title);
        container.appendChild(imageTag);
        container.appendChild(priceTag);
        container.appendChild(amountTag);
        container.appendChild(descriptionTag);
      
        return container;
      }
      
    }
    
    // Test Test 游땕
    const testest = document.getElementById("app");
    
    const testProduct = new Product(
      "lorems",
      13.37,
      10,
      "lorem ipsum dolor sit amet",
      "https://testtest.com/testest.png"
    );
    
    testest?.appendChild(testProduct.showProduct());
  
  /*
    5. F칬ljande funktion kommer presentera studenter. Men det finns ett antal saker som 
    g친r att g칬ra betydligt b칛ttre. G칬r om s친 m친nga som du kan hitta!
    */
    function presentStudents(students: Student[]): void {
      for (const student of students) {
        let container = document.createElement("div");
        let checkbox = document.createElement("input");
        checkbox.type = "checkbox";
        checkbox.checked = student.handedInOnTime; 
        
        container.appendChild(checkbox);
        
        let listOfStudents = document.querySelector(student.handedInOnTime ? "ul#passedstudents" : "ul#failedstudents");
        
        listOfStudents?.appendChild(container);
      }
    }

    (presentStudents)
    
  
  /*
    6. Skriv en funktion som skall sl친 ihop f칬ljande texter p친 ett bra s칛tt:
    Lorem, ipsum, dolor, sit, amet
    Exemplet under l칬ser problemet, men inte speciellt bra. Hur kan man g칬ra ist칛llet?
    */
  function concatenateStrings() {
    let result = ["Lorem", " ipsum", " dolor", " sit", " amet"];;
  
    return result.join();
  }
      // Test Test 游땕
  console.log(concatenateStrings());
  
  /* 
  7. Denna funktion skall kontrollera att en anv칛ndare 칛r 칬ver 20 친r och g칬ra n친gonting.
      Det finns dock problem med denna typ av funktion. Vad h칛nder n칛r kraven 칛ndras och
      fler och fler parametrar beh칬ver l칛ggas till? T.ex. avatar eller adress. Hitta en b칛ttre
      l칬sning som 칛r h친llbar och skalar b칛ttre. 
  */

      interface User {
        name: string;
        birthday: Date;
        email: string;
        password: string;
        avatar: string;
        adress: string;
      }
      
      function createUser(user: User) {
        let ageDiff = Date.now() - user.birthday.getTime();
        let ageDate = new Date(ageDiff);
        let userAge = Math.abs(ageDate.getUTCFullYear() - 1970);
      
        console.log(userAge);
      
        if (!(userAge < 20)) {
          console.log("Anv칛ndare skapad:");
        } else {
          console.log("Du 칛r under 20 친r");
        }
      }
      
      // Test Test 游땕
        createUser({
        name: "Leo Leon",
        birthday: new Date("1999-1-19"),
        email: "LeoLeon@test.com",
        password: "Abc123",
        avatar: "https://testtest.com/testest.png",
        adress: "Testv칛gen 1"
      });